------------------------------           ------------------------------
------------------------------ Variables ------------------------------
------------------------------           ------------------------------

fireHornLocation (locations of firestations, where will the alarm be played?) - X(int) Y(int) Z(int) NAME(string)

fireSpawnLocation (locations of fires, where will the first flame spawn?) - X(int) Y(int) Z(int) NAME(string) FIRETYPE(int) ISITFUELFIRE?(bool)

fireBlips (blips on map showing fire start location - DO NOT ADD ANYTHING HERE // Managed by script // He's old enough trust me)

------------------------------          ------------------------------
------------------------------ Dispatch ------------------------------
------------------------------          ------------------------------

Registers the command
    --Assigns Variables
        locates player
        introduces the variable "nearestStation"
    
    For as many entities there are in fireHornLocations do:
        Defines 'distDiff' as distance between player and 'fireHornLocation' number [i]
        introduces "nearestStationDiff"

        if "nearestStationDiff" has not been set yet:
            set "nearestStation" as current station
            set "nearestStationDiff" as distance to player and nearest station so far
        but if "nearestStationDiff" is already set:
            set "nearestStationDiff" as distance to player and nearest station so far
        end

        if currentChecked station is closer or equal to the player and nearest before then
            assign new nearest station
        end
    end

    ---- PLAYING THE SOUND IN A RIDDM
    playing the alarm:
        a bunch of for loops creating a pattern

------------------------------      ------------------------------
------------------------------ Fire ------------------------------
------------------------------      ------------------------------

---------------------------- Commands ----------------------------
Registers the command
    Sends the data over to the server which will send it back to every client to process on their own

    Registers the command
    Sends the data over to the server which will send it back to every client to process on their own

    Registers the command
    Sends the data over to the server which will send it back to every client to process on their own

    Recives back the sync (runs on all clients)
        For all fires stores in the variables file
            Remove fire entity
            Remove fire particles
        end
    end

    Stuff I really don't understand myself at this point -- probably commands
------------------------------ END ------------------------------

Recives back the sync (runs on all clients)
    Finds a random number between 1 and the number of entities in the array "fireSpawnLocation"

    Used for calls with a vehicle:
        Does stuff to spawn car

    A bunch of stuff to avoid crashing

    Still figuring out what that does

    If the type of fire is "1"
        
    If the type of fire is anything else
        Starts fire on location

        Gets a random number
        Half the times:
            Stores init in scriptData.particles // Spawns awsome looking particles1
            Stores X of fire to scriptData.firePositions X
            Stores Y of fire to scriptData.firePositions Y
            Stores Z of fire to scriptData.firePositions Z
        other half:
            Stores init in scriptData.particles // Spawns awsome looking particles2
            Stores X of fire to scriptData.firePositions X
            Stores Y of fire to scriptData.firePositions Y
            Stores Z of fire to scriptData.firePositions Z
    End
End

    if config.Display allows GPS then
        define newFireBlip as fireSpawnLocation

        a bunch of stuff defining the blip, change that if you dare

        saves the blip to fireBlips

Citizen thread

    Still figuring out what that does

    Always do
        wait 1000ms
            if no fires are stored
            otherwise
                introduces isFirePresent

                if fire is present
                otherwise
                    Remove fire particles
                end
            end
        end
    end
end

------------------------------                    ------------------------------
------------------------------ Seperate functions ------------------------------
------------------------------                    ------------------------------

Used to show notifications to the player